//
//  MovieDetailsInteractor.swift
//  Movve
//
//  Created by Victor Rubenko on 30.05.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import Foundation

final class MovieDetailsInteractor {
    private let movieDBService: MovieDBServiceProcotol
    private let dataService: DataServiceProtocol
    
    init(
        movieDBService: MovieDBServiceProcotol = MovieDBService.shared,
        dateService: DataServiceProtocol = RealmDataService.shared
    ) {
        self.movieDBService = movieDBService
        self.dataService = dateService
    }
}

// MARK: - Extensions -

extension MovieDetailsInteractor: MovieDetailsInteractorInterface {
    
    func getMovieDetails(id movieId: Int, completion: @escaping (Result<MovieDetails, Error>) -> Void)  {
        movieDBService.getMovieDetails(id: movieId, completion: completion)
    }
    
    func getCast(id movieId: Int, completion: @escaping (Result<Credits, Error>) -> Void) {
        movieDBService.getMovieCredits(id: movieId, completion: completion)
    }
    
    func getMovieVideos(id movieId: Int, completion: @escaping (Result<[Video], Error>) -> Void) {
        movieDBService.getMovieVideos(id: movieId, completion: completion)
    }
    
    func addToFavorites(movie: MovieDetails) {
        dataService.addToFavorite(movie: movie)
    }
    
    func removeFromFavorites(movieId: Int) {
        dataService.removeFromFavorites(movieId: movieId)
    }
    
    func isInFavorite(movieId: Int) -> Bool {
        dataService.isMovieInFavorites(movieId: movieId)
    }
    
}
