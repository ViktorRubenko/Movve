//
//  FavoritesInteractor.swift
//  Movve
//
//  Created by Victor Rubenko on 30.05.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import Foundation

final class FavoritesInteractor {
    private let dataService: DataServiceInterface
    private let  mapper: MovieDBMapperInterface
    
    init(
        dataService: DataServiceInterface = RealmDataService.shared,
        mapper: MovieDBMapperInterface = Mapper.shared
    ) {
        self.mapper = mapper
        self.dataService = dataService
    }
}

// MARK: - Extensions -

extension FavoritesInteractor: FavoritesInteractorInterface {
    func removeFavoriteMovie(id: Int) {
        dataService.removeFromFavorites(id: id, kind: .Movie)
    }
    
    func removeFavoriteTVShow(id: Int) {
        dataService.removeFromFavorites(id: id, kind: .TVShow)
    }
    
    func getFavoriteMovies(sortedBy: FavoriteModelSortedKey, ascending: Bool = true) -> [FavoriteModel] {
        dataService.getFavorites(sortedBy: sortedBy.rawValue, ascending: ascending)
            .filter{ $0.kindEnum == .Movie }.map{ mapper.favoriteDataModelToFavoriteModel($0) }
    }
    
    func getFavoriteTVShows(sortedBy: FavoriteModelSortedKey, ascending: Bool = true) -> [FavoriteModel] {
        dataService.getFavorites(sortedBy: sortedBy.rawValue, ascending: ascending)
            .filter{ $0.kindEnum == .TVShow }.map{ mapper.favoriteDataModelToFavoriteModel($0) }
    }
    
    
}
