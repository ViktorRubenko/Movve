//
//  SearchInteractor.swift
//  Movve
//
//  Created by Victor Rubenko on 04.06.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import Foundation

final class SearchInteractor {
    private let movieDBService: MovieDBServiceInterface
    private let mapper: MovieDBMapperInterface
    
    init(
        movieDBService: MovieDBServiceInterface = MovieDBService.shared,
        mapper: MovieDBMapperInterface = Mapper.shared
    ) {
        self.mapper = mapper
        self.movieDBService = movieDBService
    }
}

// MARK: - Extensions -

extension SearchInteractor: SearchInteractorInterface {
    func searchMovies(query: String, completion: @escaping (Result<[ItemModel], Error>) -> Void) {
        movieDBService.searchMovies(query: query, page: 1) { result in
            switch result {
            case .success(let movies):
                completion(.success(movies.map { self.mapper.movieToItemModel($0) }))
            case .failure(let error):
                completion(.failure(error))
            }
        }
    }
    
    func searchTVShows(query: String, completion: @escaping (Result<[ItemModel], Error>) -> Void) {
        movieDBService.searchTVShows(query: query, page: 1) { result in
            switch result {
            case .success(let tvShows):
                completion(.success(tvShows.map { self.mapper.tvShowToItemModel($0) }))
            case .failure(let error):
                completion(.failure(error))
            }
        }
    }
}
